#!/bin/sh

OVLROOT_INITRD_DIR="/.overlay"
OVLROOT_SYSTEM_DIR="/new_root/.overlay"

ovlroot_make_fs_readonly() {
	local fsopts=${1}, fsopts_ro="ro"
	local opt=""

	for opt in ${fsopts//,/ }
	do
		case "${opt}" in
			none | rw)
				;;
			ro)
				fsopts_ro="${fsopts}"
				break
				;;
			*)
				fsopts_ro="${fsopts_ro},${opt}"
				;;
		esac
	done

	printf "%s" "${fsopts_ro}"
}

ovlroot_parse_fstab() {
	local fstab=${1} mnt_rdonly=${2} mnt_overlay=${3} fstab_new=${4}
	local fstab_ovl=${5}
	local line=""

	while IFS= read -r line
	do
		local fs="" fsdir="" fstype="" fsopts=""
		local fsdump="" fspass="" error=""
		local var="" mnt=""

		line=${line%%#*}

		[  "x${line}" = "x" ] && continue

		read -r fs fsdir fstype fsopts fsdump fspass error <<-EOF
		${line}
		EOF

		[ "x${fspass}" = "x" ] || [ "x${error}" != "x" ] && continue

		var="${fstab_new}"

		for mnt in ${mnt_overlay}
		do
			if [ "${mnt}" = "${fsdir}" ]
			then
				fsopts="$(ovlroot_make_fs_readonly "${fsopts}")"
				var="${fstab_ovl}"
				fsdump=0; fspass=0
				break
			fi
		done

		if [ "${var}" = "${fstab_new}" ]
		then
			for mnt in ${mnt_rdonly}
			do
				if [ "${mnt}" = "${fsdir}" ]
				then
					fsopts="$(ovlroot_make_fs_readonly "${fsopts}")"
					fspass=0
					break
				fi
			done
		fi

		eval ${var}="\"\${${var}}

${fs}	${fsdir}	${fstype}	${fsopts}	${fsdump}	${fspass}\""
	done <"${fstab}"
}

run_latehook() {
	local fs="" fsdir="" fstype="" fsopts="" fsdump="" fspass=""
	local opts="" overlay="" rdonly=""
	local fsopts_root="ro" fstab="/etc/fstab"

	[ "x${overlayroot}" = "x" ] && return

	for opt in ${overlayroot//:/ }
	do
		case "${opt}" in
			ovl=*)
				overlay="${opt#ovl=}"
				;;
			ro=*)
				rdonly="${opt#ro=}"
				;;
			*)
				;;
		esac
	done

	ovlroot_parse_fstab "/new_root/${fstab}" "${rdonly//,/ }" \
	"/ ${overlay//,/ }" "OVLROOT_MNTS_FSTAB" "OVLROOT_MNTS_OVERLAY"

	mkdir -p "${OVLROOT_INITRD_DIR}"
	mount -t "tmpfs" "overlayroot-tmpfs" "${OVLROOT_INITRD_DIR}"

	mkdir -p "${OVLROOT_INITRD_DIR}/lower"
	mkdir -p "${OVLROOT_INITRD_DIR}/upper/root"
	mkdir -p "${OVLROOT_INITRD_DIR}/work/root"
	mount -o "move" "/new_root" "${OVLROOT_INITRD_DIR}/lower"

	mount -t "overlay" -o \
"lowerdir=${OVLROOT_INITRD_DIR}/lower,\
upperdir=${OVLROOT_INITRD_DIR}/upper/root,\
workdir=${OVLROOT_INITRD_DIR}/work/root" "overlayroot" "/new_root"

	while read -r fs fsdir fstype fsopts fsdump fspass
	do
		local cnt=0 basedir=""

		[ "x${fs}" = "x" ] && continue

		if [ "${fsdir}" = "/" ]
		then
			fsopts_root=${fsopts}
			continue
		fi

		basedir="$(basename "${fsdir}")"

		while [ -d "${OVLROOT_INITRD_DIR}/upper/${basedir}" ]
		do
			basedir="${basedir}$((cnt++))"
		done	

		mkdir -p "${OVLROOT_INITRD_DIR}/upper/${basedir}"
		mkdir -p "${OVLROOT_INITRD_DIR}/work/${basedir}"

		mount -t "${fstype}" -o "${fsopts}" "${fs}" \
		"${OVLROOT_INITRD_DIR}/lower/${fsdir}"
		mount -t "overlay" -o \
"lowerdir=${OVLROOT_INITRD_DIR}/lower/${fsdir},\
upperdir=${OVLROOT_INITRD_DIR}/upper/${basedir},\
workdir=${OVLROOT_INITRD_DIR}/work/${basedir}" \
		"overlay-${basedir}" "/new_root/${fsdir}"
	done <<-EOF
	${OVLROOT_MNTS_OVERLAY}
	EOF

	if [ "x${OVLROOT_MNTS_FSTAB}" != "x" ]
	then
		cat >"/new_root/${fstab}" <<-EOF
		# generated by overlayroot

		${OVLROOT_MNTS_FSTAB}
		EOF
	fi

	mkdir -p "${OVLROOT_SYSTEM_DIR}"
	mount -o "move" "${OVLROOT_INITRD_DIR}" "${OVLROOT_SYSTEM_DIR}"
	mount -o "remount,${fsopts_root}" "${OVLROOT_SYSTEM_DIR}/lower"
}

